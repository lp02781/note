import tensorflow as tf
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def main():
    df = pd.read_excel('Data_Boat_Inverse_Lengkap.xlsx')
    #df = pd.read_excel('Data_Boat_Vx.xlsx')
    data = df.values
    X_data = data[:,:-2]
    Y_data = data[:,-2:]
    #X_data = (X_data - np.mean(X_data))/np.std(X_data)
    X = X_data[:-1000]
    X_test = X_data[-1000:]
    Y = Y_data[:-1000]
    Y_test = Y_data[-1000:]
    #X = data[:-1000,0]
    #Y = data[:-1000,1]
    #X_test = data[-1000:,0]
    #Y_test = data[-1000:,1]
    #X = np.reshape(X,(len(X),1))
    #Y = np.reshape(Y,(len(Y),1))
    #X_test = np.reshape(X_test,(len(X_test),1))
    #Y_test = np.reshape(Y_test,(len(Y_test),1))

    model = tf.keras.models.Sequential([
      tf.keras.layers.Dense(128, activation=tf.nn.relu),
      tf.keras.layers.Dense(128, activation=tf.nn.relu),
      tf.keras.layers.Dense(128, activation=tf.nn.relu),
      tf.keras.layers.Dense(128, activation=tf.nn.relu),
      tf.keras.layers.Dense(128, activation=tf.nn.relu),
      #tf.keras.layers.Dropout(0.2),
      tf.keras.layers.Dense(2, activation= tf.keras.activations.linear)
    ])
    model.compile(optimizer= tf.keras.optimizers.Adam(lr =0.001),loss='mean_squared_error',metrics=['accuracy'])
    
    #print(X.shape)
    r = model.fit(X, Y, epochs= 2000)
    plt.plot(r.history['loss'],label = 'Training')
    plt.legend()
    plt.show()
    Y_pred = model.predict(X_test)
    x_label = np.arange(1,1001,1)
    plt.figure()
    plt.subplot(311)
    plt.plot(x_label, Y_test[:,0], '-b', x_label, Y_pred[:,0], '-r')
    plt.subplot(312)
    plt.plot(x_label, Y_test[:,1], '-b', x_label, Y_pred[:,1], '-r')
    plt.show()
    model.summary()
    #print(Y_pred)

if __name__ == '__main__':
    main()
